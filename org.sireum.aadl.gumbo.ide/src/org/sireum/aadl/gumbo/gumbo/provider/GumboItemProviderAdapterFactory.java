/**
 * Copyright (c) 2021, Kansas State University
 * 
 * All rights reserved.
 * 
 * Redistribution and use in source and binary forms, with or without modification, are permitted provided that the following conditions are met:
 * 
 * 1. Redistributions of source code must retain the above copyright notice, this list of conditions and the following disclaimer.
 * 
 * 2. Redistributions in binary form must reproduce the above copyright notice, this list of conditions and the following disclaimer in the documentation and/or other materials provided with the distribution.
 * 
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 */
package org.sireum.aadl.gumbo.gumbo.provider;

import java.util.ArrayList;
import java.util.Collection;

import org.eclipse.emf.common.notify.Adapter;
import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.Notifier;

import org.eclipse.emf.edit.provider.ChangeNotifier;
import org.eclipse.emf.edit.provider.ComposeableAdapterFactory;
import org.eclipse.emf.edit.provider.ComposedAdapterFactory;
import org.eclipse.emf.edit.provider.IChangeNotifier;
import org.eclipse.emf.edit.provider.IDisposable;
import org.eclipse.emf.edit.provider.IEditingDomainItemProvider;
import org.eclipse.emf.edit.provider.IItemLabelProvider;
import org.eclipse.emf.edit.provider.IItemPropertySource;
import org.eclipse.emf.edit.provider.INotifyChangedListener;
import org.eclipse.emf.edit.provider.IStructuredItemContentProvider;
import org.eclipse.emf.edit.provider.ITreeItemContentProvider;

import org.sireum.aadl.gumbo.gumbo.util.GumboAdapterFactory;

/**
 * This is the factory that is used to provide the interfaces needed to support Viewers.
 * The adapters generated by this factory convert EMF adapter notifications into calls to {@link #fireNotifyChanged fireNotifyChanged}.
 * The adapters also support Eclipse property sheets.
 * Note that most of the adapters are shared among multiple instances.
 * <!-- begin-user-doc -->
 * <!-- end-user-doc -->
 * @generated
 */
public class GumboItemProviderAdapterFactory extends GumboAdapterFactory implements ComposeableAdapterFactory, IChangeNotifier, IDisposable
{
  /**
   * This keeps track of the root adapter factory that delegates to this adapter factory.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected ComposedAdapterFactory parentAdapterFactory;

  /**
   * This is used to implement {@link org.eclipse.emf.edit.provider.IChangeNotifier}.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected IChangeNotifier changeNotifier = new ChangeNotifier();

  /**
   * This keeps track of all the supported types checked by {@link #isFactoryForType isFactoryForType}.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected Collection<Object> supportedTypes = new ArrayList<Object>();

  /**
   * This constructs an instance.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public GumboItemProviderAdapterFactory()
  {
    supportedTypes.add(IEditingDomainItemProvider.class);
    supportedTypes.add(IStructuredItemContentProvider.class);
    supportedTypes.add(ITreeItemContentProvider.class);
    supportedTypes.add(IItemLabelProvider.class);
    supportedTypes.add(IItemPropertySource.class);
  }

  /**
   * This keeps track of the one adapter used for all {@link org.sireum.aadl.gumbo.gumbo.GumboLibrary} instances.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected GumboLibraryItemProvider gumboLibraryItemProvider;

  /**
   * This creates an adapter for a {@link org.sireum.aadl.gumbo.gumbo.GumboLibrary}.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Adapter createGumboLibraryAdapter()
  {
    if (gumboLibraryItemProvider == null)
    {
      gumboLibraryItemProvider = new GumboLibraryItemProvider(this);
    }

    return gumboLibraryItemProvider;
  }

  /**
   * This keeps track of the one adapter used for all {@link org.sireum.aadl.gumbo.gumbo.GumboSubclause} instances.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected GumboSubclauseItemProvider gumboSubclauseItemProvider;

  /**
   * This creates an adapter for a {@link org.sireum.aadl.gumbo.gumbo.GumboSubclause}.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Adapter createGumboSubclauseAdapter()
  {
    if (gumboSubclauseItemProvider == null)
    {
      gumboSubclauseItemProvider = new GumboSubclauseItemProvider(this);
    }

    return gumboSubclauseItemProvider;
  }

  /**
   * This keeps track of the one adapter used for all {@link org.sireum.aadl.gumbo.gumbo.SpecSection} instances.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected SpecSectionItemProvider specSectionItemProvider;

  /**
   * This creates an adapter for a {@link org.sireum.aadl.gumbo.gumbo.SpecSection}.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Adapter createSpecSectionAdapter()
  {
    if (specSectionItemProvider == null)
    {
      specSectionItemProvider = new SpecSectionItemProvider(this);
    }

    return specSectionItemProvider;
  }

  /**
   * This keeps track of the one adapter used for all {@link org.sireum.aadl.gumbo.gumbo.State} instances.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected StateItemProvider stateItemProvider;

  /**
   * This creates an adapter for a {@link org.sireum.aadl.gumbo.gumbo.State}.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Adapter createStateAdapter()
  {
    if (stateItemProvider == null)
    {
      stateItemProvider = new StateItemProvider(this);
    }

    return stateItemProvider;
  }

  /**
   * This keeps track of the one adapter used for all {@link org.sireum.aadl.gumbo.gumbo.StateVarDecl} instances.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected StateVarDeclItemProvider stateVarDeclItemProvider;

  /**
   * This creates an adapter for a {@link org.sireum.aadl.gumbo.gumbo.StateVarDecl}.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Adapter createStateVarDeclAdapter()
  {
    if (stateVarDeclItemProvider == null)
    {
      stateVarDeclItemProvider = new StateVarDeclItemProvider(this);
    }

    return stateVarDeclItemProvider;
  }

  /**
   * This keeps track of the one adapter used for all {@link org.sireum.aadl.gumbo.gumbo.Invariants} instances.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected InvariantsItemProvider invariantsItemProvider;

  /**
   * This creates an adapter for a {@link org.sireum.aadl.gumbo.gumbo.Invariants}.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Adapter createInvariantsAdapter()
  {
    if (invariantsItemProvider == null)
    {
      invariantsItemProvider = new InvariantsItemProvider(this);
    }

    return invariantsItemProvider;
  }

  /**
   * This keeps track of the one adapter used for all {@link org.sireum.aadl.gumbo.gumbo.InvSpec} instances.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected InvSpecItemProvider invSpecItemProvider;

  /**
   * This creates an adapter for a {@link org.sireum.aadl.gumbo.gumbo.InvSpec}.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Adapter createInvSpecAdapter()
  {
    if (invSpecItemProvider == null)
    {
      invSpecItemProvider = new InvSpecItemProvider(this);
    }

    return invSpecItemProvider;
  }

  /**
   * This keeps track of the one adapter used for all {@link org.sireum.aadl.gumbo.gumbo.Integration} instances.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected IntegrationItemProvider integrationItemProvider;

  /**
   * This creates an adapter for a {@link org.sireum.aadl.gumbo.gumbo.Integration}.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Adapter createIntegrationAdapter()
  {
    if (integrationItemProvider == null)
    {
      integrationItemProvider = new IntegrationItemProvider(this);
    }

    return integrationItemProvider;
  }

  /**
   * This keeps track of the one adapter used for all {@link org.sireum.aadl.gumbo.gumbo.Initialize} instances.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected InitializeItemProvider initializeItemProvider;

  /**
   * This creates an adapter for a {@link org.sireum.aadl.gumbo.gumbo.Initialize}.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Adapter createInitializeAdapter()
  {
    if (initializeItemProvider == null)
    {
      initializeItemProvider = new InitializeItemProvider(this);
    }

    return initializeItemProvider;
  }

  /**
   * This keeps track of the one adapter used for all {@link org.sireum.aadl.gumbo.gumbo.InitializeSpecStatement} instances.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected InitializeSpecStatementItemProvider initializeSpecStatementItemProvider;

  /**
   * This creates an adapter for a {@link org.sireum.aadl.gumbo.gumbo.InitializeSpecStatement}.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Adapter createInitializeSpecStatementAdapter()
  {
    if (initializeSpecStatementItemProvider == null)
    {
      initializeSpecStatementItemProvider = new InitializeSpecStatementItemProvider(this);
    }

    return initializeSpecStatementItemProvider;
  }

  /**
   * This keeps track of the one adapter used for all {@link org.sireum.aadl.gumbo.gumbo.Compute} instances.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected ComputeItemProvider computeItemProvider;

  /**
   * This creates an adapter for a {@link org.sireum.aadl.gumbo.gumbo.Compute}.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Adapter createComputeAdapter()
  {
    if (computeItemProvider == null)
    {
      computeItemProvider = new ComputeItemProvider(this);
    }

    return computeItemProvider;
  }

  /**
   * This keeps track of the one adapter used for all {@link org.sireum.aadl.gumbo.gumbo.HandlerClause} instances.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected HandlerClauseItemProvider handlerClauseItemProvider;

  /**
   * This creates an adapter for a {@link org.sireum.aadl.gumbo.gumbo.HandlerClause}.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Adapter createHandlerClauseAdapter()
  {
    if (handlerClauseItemProvider == null)
    {
      handlerClauseItemProvider = new HandlerClauseItemProvider(this);
    }

    return handlerClauseItemProvider;
  }

  /**
   * This keeps track of the one adapter used for all {@link org.sireum.aadl.gumbo.gumbo.CaseStatementClause} instances.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected CaseStatementClauseItemProvider caseStatementClauseItemProvider;

  /**
   * This creates an adapter for a {@link org.sireum.aadl.gumbo.gumbo.CaseStatementClause}.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Adapter createCaseStatementClauseAdapter()
  {
    if (caseStatementClauseItemProvider == null)
    {
      caseStatementClauseItemProvider = new CaseStatementClauseItemProvider(this);
    }

    return caseStatementClauseItemProvider;
  }

  /**
   * This keeps track of the one adapter used for all {@link org.sireum.aadl.gumbo.gumbo.SpecStatement} instances.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected SpecStatementItemProvider specStatementItemProvider;

  /**
   * This creates an adapter for a {@link org.sireum.aadl.gumbo.gumbo.SpecStatement}.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Adapter createSpecStatementAdapter()
  {
    if (specStatementItemProvider == null)
    {
      specStatementItemProvider = new SpecStatementItemProvider(this);
    }

    return specStatementItemProvider;
  }

  /**
   * This keeps track of the one adapter used for all {@link org.sireum.aadl.gumbo.gumbo.AssumeStatement} instances.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected AssumeStatementItemProvider assumeStatementItemProvider;

  /**
   * This creates an adapter for a {@link org.sireum.aadl.gumbo.gumbo.AssumeStatement}.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Adapter createAssumeStatementAdapter()
  {
    if (assumeStatementItemProvider == null)
    {
      assumeStatementItemProvider = new AssumeStatementItemProvider(this);
    }

    return assumeStatementItemProvider;
  }

  /**
   * This keeps track of the one adapter used for all {@link org.sireum.aadl.gumbo.gumbo.AnonAssumeStatement} instances.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected AnonAssumeStatementItemProvider anonAssumeStatementItemProvider;

  /**
   * This creates an adapter for a {@link org.sireum.aadl.gumbo.gumbo.AnonAssumeStatement}.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Adapter createAnonAssumeStatementAdapter()
  {
    if (anonAssumeStatementItemProvider == null)
    {
      anonAssumeStatementItemProvider = new AnonAssumeStatementItemProvider(this);
    }

    return anonAssumeStatementItemProvider;
  }

  /**
   * This keeps track of the one adapter used for all {@link org.sireum.aadl.gumbo.gumbo.GuaranteeStatement} instances.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected GuaranteeStatementItemProvider guaranteeStatementItemProvider;

  /**
   * This creates an adapter for a {@link org.sireum.aadl.gumbo.gumbo.GuaranteeStatement}.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Adapter createGuaranteeStatementAdapter()
  {
    if (guaranteeStatementItemProvider == null)
    {
      guaranteeStatementItemProvider = new GuaranteeStatementItemProvider(this);
    }

    return guaranteeStatementItemProvider;
  }

  /**
   * This keeps track of the one adapter used for all {@link org.sireum.aadl.gumbo.gumbo.AnonGuaranteeStatement} instances.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected AnonGuaranteeStatementItemProvider anonGuaranteeStatementItemProvider;

  /**
   * This creates an adapter for a {@link org.sireum.aadl.gumbo.gumbo.AnonGuaranteeStatement}.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Adapter createAnonGuaranteeStatementAdapter()
  {
    if (anonGuaranteeStatementItemProvider == null)
    {
      anonGuaranteeStatementItemProvider = new AnonGuaranteeStatementItemProvider(this);
    }

    return anonGuaranteeStatementItemProvider;
  }

  /**
   * This keeps track of the one adapter used for all {@link org.sireum.aadl.gumbo.gumbo.OtherDataRef} instances.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected OtherDataRefItemProvider otherDataRefItemProvider;

  /**
   * This creates an adapter for a {@link org.sireum.aadl.gumbo.gumbo.OtherDataRef}.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Adapter createOtherDataRefAdapter()
  {
    if (otherDataRefItemProvider == null)
    {
      otherDataRefItemProvider = new OtherDataRefItemProvider(this);
    }

    return otherDataRefItemProvider;
  }

  /**
   * This keeps track of the one adapter used for all {@link org.sireum.aadl.gumbo.gumbo.DoubleDotRef} instances.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected DoubleDotRefItemProvider doubleDotRefItemProvider;

  /**
   * This creates an adapter for a {@link org.sireum.aadl.gumbo.gumbo.DoubleDotRef}.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Adapter createDoubleDotRefAdapter()
  {
    if (doubleDotRefItemProvider == null)
    {
      doubleDotRefItemProvider = new DoubleDotRefItemProvider(this);
    }

    return doubleDotRefItemProvider;
  }

  /**
   * This keeps track of the one adapter used for all {@link org.sireum.aadl.gumbo.gumbo.DataElement} instances.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected DataElementItemProvider dataElementItemProvider;

  /**
   * This creates an adapter for a {@link org.sireum.aadl.gumbo.gumbo.DataElement}.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Adapter createDataElementAdapter()
  {
    if (dataElementItemProvider == null)
    {
      dataElementItemProvider = new DataElementItemProvider(this);
    }

    return dataElementItemProvider;
  }

  /**
   * This keeps track of the one adapter used for all {@link org.sireum.aadl.gumbo.gumbo.SubcomponentElement} instances.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected SubcomponentElementItemProvider subcomponentElementItemProvider;

  /**
   * This creates an adapter for a {@link org.sireum.aadl.gumbo.gumbo.SubcomponentElement}.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Adapter createSubcomponentElementAdapter()
  {
    if (subcomponentElementItemProvider == null)
    {
      subcomponentElementItemProvider = new SubcomponentElementItemProvider(this);
    }

    return subcomponentElementItemProvider;
  }

  /**
   * This keeps track of the one adapter used for all {@link org.sireum.aadl.gumbo.gumbo.Functions} instances.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected FunctionsItemProvider functionsItemProvider;

  /**
   * This creates an adapter for a {@link org.sireum.aadl.gumbo.gumbo.Functions}.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Adapter createFunctionsAdapter()
  {
    if (functionsItemProvider == null)
    {
      functionsItemProvider = new FunctionsItemProvider(this);
    }

    return functionsItemProvider;
  }

  /**
   * This keeps track of the one adapter used for all {@link org.sireum.aadl.gumbo.gumbo.FuncSpec} instances.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected FuncSpecItemProvider funcSpecItemProvider;

  /**
   * This creates an adapter for a {@link org.sireum.aadl.gumbo.gumbo.FuncSpec}.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Adapter createFuncSpecAdapter()
  {
    if (funcSpecItemProvider == null)
    {
      funcSpecItemProvider = new FuncSpecItemProvider(this);
    }

    return funcSpecItemProvider;
  }

  /**
   * This keeps track of the one adapter used for all {@link org.sireum.aadl.gumbo.gumbo.SlangDefDeclDef} instances.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected SlangDefDeclDefItemProvider slangDefDeclDefItemProvider;

  /**
   * This creates an adapter for a {@link org.sireum.aadl.gumbo.gumbo.SlangDefDeclDef}.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Adapter createSlangDefDeclDefAdapter()
  {
    if (slangDefDeclDefItemProvider == null)
    {
      slangDefDeclDefItemProvider = new SlangDefDeclDefItemProvider(this);
    }

    return slangDefDeclDefItemProvider;
  }

  /**
   * This keeps track of the one adapter used for all {@link org.sireum.aadl.gumbo.gumbo.SlangDefDecl} instances.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected SlangDefDeclItemProvider slangDefDeclItemProvider;

  /**
   * This creates an adapter for a {@link org.sireum.aadl.gumbo.gumbo.SlangDefDecl}.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Adapter createSlangDefDeclAdapter()
  {
    if (slangDefDeclItemProvider == null)
    {
      slangDefDeclItemProvider = new SlangDefDeclItemProvider(this);
    }

    return slangDefDeclItemProvider;
  }

  /**
   * This keeps track of the one adapter used for all {@link org.sireum.aadl.gumbo.gumbo.SlangDefDef} instances.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected SlangDefDefItemProvider slangDefDefItemProvider;

  /**
   * This creates an adapter for a {@link org.sireum.aadl.gumbo.gumbo.SlangDefDef}.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Adapter createSlangDefDefAdapter()
  {
    if (slangDefDefItemProvider == null)
    {
      slangDefDefItemProvider = new SlangDefDefItemProvider(this);
    }

    return slangDefDefItemProvider;
  }

  /**
   * This keeps track of the one adapter used for all {@link org.sireum.aadl.gumbo.gumbo.SlangDefExt} instances.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected SlangDefExtItemProvider slangDefExtItemProvider;

  /**
   * This creates an adapter for a {@link org.sireum.aadl.gumbo.gumbo.SlangDefExt}.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Adapter createSlangDefExtAdapter()
  {
    if (slangDefExtItemProvider == null)
    {
      slangDefExtItemProvider = new SlangDefExtItemProvider(this);
    }

    return slangDefExtItemProvider;
  }

  /**
   * This keeps track of the one adapter used for all {@link org.sireum.aadl.gumbo.gumbo.SlangDefParams} instances.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected SlangDefParamsItemProvider slangDefParamsItemProvider;

  /**
   * This creates an adapter for a {@link org.sireum.aadl.gumbo.gumbo.SlangDefParams}.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Adapter createSlangDefParamsAdapter()
  {
    if (slangDefParamsItemProvider == null)
    {
      slangDefParamsItemProvider = new SlangDefParamsItemProvider(this);
    }

    return slangDefParamsItemProvider;
  }

  /**
   * This keeps track of the one adapter used for all {@link org.sireum.aadl.gumbo.gumbo.SlangDefParam} instances.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected SlangDefParamItemProvider slangDefParamItemProvider;

  /**
   * This creates an adapter for a {@link org.sireum.aadl.gumbo.gumbo.SlangDefParam}.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Adapter createSlangDefParamAdapter()
  {
    if (slangDefParamItemProvider == null)
    {
      slangDefParamItemProvider = new SlangDefParamItemProvider(this);
    }

    return slangDefParamItemProvider;
  }

  /**
   * This keeps track of the one adapter used for all {@link org.sireum.aadl.gumbo.gumbo.SlangTypeParams} instances.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected SlangTypeParamsItemProvider slangTypeParamsItemProvider;

  /**
   * This creates an adapter for a {@link org.sireum.aadl.gumbo.gumbo.SlangTypeParams}.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Adapter createSlangTypeParamsAdapter()
  {
    if (slangTypeParamsItemProvider == null)
    {
      slangTypeParamsItemProvider = new SlangTypeParamsItemProvider(this);
    }

    return slangTypeParamsItemProvider;
  }

  /**
   * This keeps track of the one adapter used for all {@link org.sireum.aadl.gumbo.gumbo.SlangTypeParam} instances.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected SlangTypeParamItemProvider slangTypeParamItemProvider;

  /**
   * This creates an adapter for a {@link org.sireum.aadl.gumbo.gumbo.SlangTypeParam}.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Adapter createSlangTypeParamAdapter()
  {
    if (slangTypeParamItemProvider == null)
    {
      slangTypeParamItemProvider = new SlangTypeParamItemProvider(this);
    }

    return slangTypeParamItemProvider;
  }

  /**
   * This keeps track of the one adapter used for all {@link org.sireum.aadl.gumbo.gumbo.SlangDefContract} instances.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected SlangDefContractItemProvider slangDefContractItemProvider;

  /**
   * This creates an adapter for a {@link org.sireum.aadl.gumbo.gumbo.SlangDefContract}.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Adapter createSlangDefContractAdapter()
  {
    if (slangDefContractItemProvider == null)
    {
      slangDefContractItemProvider = new SlangDefContractItemProvider(this);
    }

    return slangDefContractItemProvider;
  }

  /**
   * This keeps track of the one adapter used for all {@link org.sireum.aadl.gumbo.gumbo.SlangDefContractCase} instances.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected SlangDefContractCaseItemProvider slangDefContractCaseItemProvider;

  /**
   * This creates an adapter for a {@link org.sireum.aadl.gumbo.gumbo.SlangDefContractCase}.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Adapter createSlangDefContractCaseAdapter()
  {
    if (slangDefContractCaseItemProvider == null)
    {
      slangDefContractCaseItemProvider = new SlangDefContractCaseItemProvider(this);
    }

    return slangDefContractCaseItemProvider;
  }

  /**
   * This keeps track of the one adapter used for all {@link org.sireum.aadl.gumbo.gumbo.SlangSuprs} instances.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected SlangSuprsItemProvider slangSuprsItemProvider;

  /**
   * This creates an adapter for a {@link org.sireum.aadl.gumbo.gumbo.SlangSuprs}.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Adapter createSlangSuprsAdapter()
  {
    if (slangSuprsItemProvider == null)
    {
      slangSuprsItemProvider = new SlangSuprsItemProvider(this);
    }

    return slangSuprsItemProvider;
  }

  /**
   * This keeps track of the one adapter used for all {@link org.sireum.aadl.gumbo.gumbo.SlangSupr} instances.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected SlangSuprItemProvider slangSuprItemProvider;

  /**
   * This creates an adapter for a {@link org.sireum.aadl.gumbo.gumbo.SlangSupr}.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Adapter createSlangSuprAdapter()
  {
    if (slangSuprItemProvider == null)
    {
      slangSuprItemProvider = new SlangSuprItemProvider(this);
    }

    return slangSuprItemProvider;
  }

  /**
   * This keeps track of the one adapter used for all {@link org.sireum.aadl.gumbo.gumbo.SlangExt} instances.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected SlangExtItemProvider slangExtItemProvider;

  /**
   * This creates an adapter for a {@link org.sireum.aadl.gumbo.gumbo.SlangExt}.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Adapter createSlangExtAdapter()
  {
    if (slangExtItemProvider == null)
    {
      slangExtItemProvider = new SlangExtItemProvider(this);
    }

    return slangExtItemProvider;
  }

  /**
   * This keeps track of the one adapter used for all {@link org.sireum.aadl.gumbo.gumbo.SlangInvariant} instances.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected SlangInvariantItemProvider slangInvariantItemProvider;

  /**
   * This creates an adapter for a {@link org.sireum.aadl.gumbo.gumbo.SlangInvariant}.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Adapter createSlangInvariantAdapter()
  {
    if (slangInvariantItemProvider == null)
    {
      slangInvariantItemProvider = new SlangInvariantItemProvider(this);
    }

    return slangInvariantItemProvider;
  }

  /**
   * This keeps track of the one adapter used for all {@link org.sireum.aadl.gumbo.gumbo.SlangRequires} instances.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected SlangRequiresItemProvider slangRequiresItemProvider;

  /**
   * This creates an adapter for a {@link org.sireum.aadl.gumbo.gumbo.SlangRequires}.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Adapter createSlangRequiresAdapter()
  {
    if (slangRequiresItemProvider == null)
    {
      slangRequiresItemProvider = new SlangRequiresItemProvider(this);
    }

    return slangRequiresItemProvider;
  }

  /**
   * This keeps track of the one adapter used for all {@link org.sireum.aadl.gumbo.gumbo.SlangReads} instances.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected SlangReadsItemProvider slangReadsItemProvider;

  /**
   * This creates an adapter for a {@link org.sireum.aadl.gumbo.gumbo.SlangReads}.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Adapter createSlangReadsAdapter()
  {
    if (slangReadsItemProvider == null)
    {
      slangReadsItemProvider = new SlangReadsItemProvider(this);
    }

    return slangReadsItemProvider;
  }

  /**
   * This keeps track of the one adapter used for all {@link org.sireum.aadl.gumbo.gumbo.SlangModifies} instances.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected SlangModifiesItemProvider slangModifiesItemProvider;

  /**
   * This creates an adapter for a {@link org.sireum.aadl.gumbo.gumbo.SlangModifies}.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Adapter createSlangModifiesAdapter()
  {
    if (slangModifiesItemProvider == null)
    {
      slangModifiesItemProvider = new SlangModifiesItemProvider(this);
    }

    return slangModifiesItemProvider;
  }

  /**
   * This keeps track of the one adapter used for all {@link org.sireum.aadl.gumbo.gumbo.SlangEnsures} instances.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected SlangEnsuresItemProvider slangEnsuresItemProvider;

  /**
   * This creates an adapter for a {@link org.sireum.aadl.gumbo.gumbo.SlangEnsures}.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Adapter createSlangEnsuresAdapter()
  {
    if (slangEnsuresItemProvider == null)
    {
      slangEnsuresItemProvider = new SlangEnsuresItemProvider(this);
    }

    return slangEnsuresItemProvider;
  }

  /**
   * This keeps track of the one adapter used for all {@link org.sireum.aadl.gumbo.gumbo.SlangStmt} instances.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected SlangStmtItemProvider slangStmtItemProvider;

  /**
   * This creates an adapter for a {@link org.sireum.aadl.gumbo.gumbo.SlangStmt}.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Adapter createSlangStmtAdapter()
  {
    if (slangStmtItemProvider == null)
    {
      slangStmtItemProvider = new SlangStmtItemProvider(this);
    }

    return slangStmtItemProvider;
  }

  /**
   * This keeps track of the one adapter used for all {@link org.sireum.aadl.gumbo.gumbo.SlangElse} instances.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected SlangElseItemProvider slangElseItemProvider;

  /**
   * This creates an adapter for a {@link org.sireum.aadl.gumbo.gumbo.SlangElse}.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Adapter createSlangElseAdapter()
  {
    if (slangElseItemProvider == null)
    {
      slangElseItemProvider = new SlangElseItemProvider(this);
    }

    return slangElseItemProvider;
  }

  /**
   * This keeps track of the one adapter used for all {@link org.sireum.aadl.gumbo.gumbo.SlangLoopContract} instances.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected SlangLoopContractItemProvider slangLoopContractItemProvider;

  /**
   * This creates an adapter for a {@link org.sireum.aadl.gumbo.gumbo.SlangLoopContract}.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Adapter createSlangLoopContractAdapter()
  {
    if (slangLoopContractItemProvider == null)
    {
      slangLoopContractItemProvider = new SlangLoopContractItemProvider(this);
    }

    return slangLoopContractItemProvider;
  }

  /**
   * This keeps track of the one adapter used for all {@link org.sireum.aadl.gumbo.gumbo.SlangLHSSuffix} instances.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected SlangLHSSuffixItemProvider slangLHSSuffixItemProvider;

  /**
   * This creates an adapter for a {@link org.sireum.aadl.gumbo.gumbo.SlangLHSSuffix}.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Adapter createSlangLHSSuffixAdapter()
  {
    if (slangLHSSuffixItemProvider == null)
    {
      slangLHSSuffixItemProvider = new SlangLHSSuffixItemProvider(this);
    }

    return slangLHSSuffixItemProvider;
  }

  /**
   * This keeps track of the one adapter used for all {@link org.sireum.aadl.gumbo.gumbo.SlangCase} instances.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected SlangCaseItemProvider slangCaseItemProvider;

  /**
   * This creates an adapter for a {@link org.sireum.aadl.gumbo.gumbo.SlangCase}.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Adapter createSlangCaseAdapter()
  {
    if (slangCaseItemProvider == null)
    {
      slangCaseItemProvider = new SlangCaseItemProvider(this);
    }

    return slangCaseItemProvider;
  }

  /**
   * This keeps track of the one adapter used for all {@link org.sireum.aadl.gumbo.gumbo.SlangPattern} instances.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected SlangPatternItemProvider slangPatternItemProvider;

  /**
   * This creates an adapter for a {@link org.sireum.aadl.gumbo.gumbo.SlangPattern}.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Adapter createSlangPatternAdapter()
  {
    if (slangPatternItemProvider == null)
    {
      slangPatternItemProvider = new SlangPatternItemProvider(this);
    }

    return slangPatternItemProvider;
  }

  /**
   * This keeps track of the one adapter used for all {@link org.sireum.aadl.gumbo.gumbo.SlangTPattern} instances.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected SlangTPatternItemProvider slangTPatternItemProvider;

  /**
   * This creates an adapter for a {@link org.sireum.aadl.gumbo.gumbo.SlangTPattern}.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Adapter createSlangTPatternAdapter()
  {
    if (slangTPatternItemProvider == null)
    {
      slangTPatternItemProvider = new SlangTPatternItemProvider(this);
    }

    return slangTPatternItemProvider;
  }

  /**
   * This keeps track of the one adapter used for all {@link org.sireum.aadl.gumbo.gumbo.SlangVarDef} instances.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected SlangVarDefItemProvider slangVarDefItemProvider;

  /**
   * This creates an adapter for a {@link org.sireum.aadl.gumbo.gumbo.SlangVarDef}.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Adapter createSlangVarDefAdapter()
  {
    if (slangVarDefItemProvider == null)
    {
      slangVarDefItemProvider = new SlangVarDefItemProvider(this);
    }

    return slangVarDefItemProvider;
  }

  /**
   * This keeps track of the one adapter used for all {@link org.sireum.aadl.gumbo.gumbo.Expr} instances.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected ExprItemProvider exprItemProvider;

  /**
   * This creates an adapter for a {@link org.sireum.aadl.gumbo.gumbo.Expr}.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Adapter createExprAdapter()
  {
    if (exprItemProvider == null)
    {
      exprItemProvider = new ExprItemProvider(this);
    }

    return exprItemProvider;
  }

  /**
   * This keeps track of the one adapter used for all {@link org.sireum.aadl.gumbo.gumbo.SlangQuantVar} instances.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected SlangQuantVarItemProvider slangQuantVarItemProvider;

  /**
   * This creates an adapter for a {@link org.sireum.aadl.gumbo.gumbo.SlangQuantVar}.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Adapter createSlangQuantVarAdapter()
  {
    if (slangQuantVarItemProvider == null)
    {
      slangQuantVarItemProvider = new SlangQuantVarItemProvider(this);
    }

    return slangQuantVarItemProvider;
  }

  /**
   * This keeps track of the one adapter used for all {@link org.sireum.aadl.gumbo.gumbo.SlangBlock} instances.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected SlangBlockItemProvider slangBlockItemProvider;

  /**
   * This creates an adapter for a {@link org.sireum.aadl.gumbo.gumbo.SlangBlock}.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Adapter createSlangBlockAdapter()
  {
    if (slangBlockItemProvider == null)
    {
      slangBlockItemProvider = new SlangBlockItemProvider(this);
    }

    return slangBlockItemProvider;
  }

  /**
   * This keeps track of the one adapter used for all {@link org.sireum.aadl.gumbo.gumbo.SlangAccessSuffix} instances.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected SlangAccessSuffixItemProvider slangAccessSuffixItemProvider;

  /**
   * This creates an adapter for a {@link org.sireum.aadl.gumbo.gumbo.SlangAccessSuffix}.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Adapter createSlangAccessSuffixAdapter()
  {
    if (slangAccessSuffixItemProvider == null)
    {
      slangAccessSuffixItemProvider = new SlangAccessSuffixItemProvider(this);
    }

    return slangAccessSuffixItemProvider;
  }

  /**
   * This keeps track of the one adapter used for all {@link org.sireum.aadl.gumbo.gumbo.SlangParams} instances.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected SlangParamsItemProvider slangParamsItemProvider;

  /**
   * This creates an adapter for a {@link org.sireum.aadl.gumbo.gumbo.SlangParams}.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Adapter createSlangParamsAdapter()
  {
    if (slangParamsItemProvider == null)
    {
      slangParamsItemProvider = new SlangParamsItemProvider(this);
    }

    return slangParamsItemProvider;
  }

  /**
   * This keeps track of the one adapter used for all {@link org.sireum.aadl.gumbo.gumbo.SlangParam} instances.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected SlangParamItemProvider slangParamItemProvider;

  /**
   * This creates an adapter for a {@link org.sireum.aadl.gumbo.gumbo.SlangParam}.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Adapter createSlangParamAdapter()
  {
    if (slangParamItemProvider == null)
    {
      slangParamItemProvider = new SlangParamItemProvider(this);
    }

    return slangParamItemProvider;
  }

  /**
   * This keeps track of the one adapter used for all {@link org.sireum.aadl.gumbo.gumbo.SlangForRange} instances.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected SlangForRangeItemProvider slangForRangeItemProvider;

  /**
   * This creates an adapter for a {@link org.sireum.aadl.gumbo.gumbo.SlangForRange}.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Adapter createSlangForRangeAdapter()
  {
    if (slangForRangeItemProvider == null)
    {
      slangForRangeItemProvider = new SlangForRangeItemProvider(this);
    }

    return slangForRangeItemProvider;
  }

  /**
   * This keeps track of the one adapter used for all {@link org.sireum.aadl.gumbo.gumbo.SlangRet} instances.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected SlangRetItemProvider slangRetItemProvider;

  /**
   * This creates an adapter for a {@link org.sireum.aadl.gumbo.gumbo.SlangRet}.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Adapter createSlangRetAdapter()
  {
    if (slangRetItemProvider == null)
    {
      slangRetItemProvider = new SlangRetItemProvider(this);
    }

    return slangRetItemProvider;
  }

  /**
   * This keeps track of the one adapter used for all {@link org.sireum.aadl.gumbo.gumbo.SlangCallSuffix} instances.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected SlangCallSuffixItemProvider slangCallSuffixItemProvider;

  /**
   * This creates an adapter for a {@link org.sireum.aadl.gumbo.gumbo.SlangCallSuffix}.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Adapter createSlangCallSuffixAdapter()
  {
    if (slangCallSuffixItemProvider == null)
    {
      slangCallSuffixItemProvider = new SlangCallSuffixItemProvider(this);
    }

    return slangCallSuffixItemProvider;
  }

  /**
   * This keeps track of the one adapter used for all {@link org.sireum.aadl.gumbo.gumbo.SlangCallArgs} instances.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected SlangCallArgsItemProvider slangCallArgsItemProvider;

  /**
   * This creates an adapter for a {@link org.sireum.aadl.gumbo.gumbo.SlangCallArgs}.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Adapter createSlangCallArgsAdapter()
  {
    if (slangCallArgsItemProvider == null)
    {
      slangCallArgsItemProvider = new SlangCallArgsItemProvider(this);
    }

    return slangCallArgsItemProvider;
  }

  /**
   * This keeps track of the one adapter used for all {@link org.sireum.aadl.gumbo.gumbo.SlangType} instances.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected SlangTypeItemProvider slangTypeItemProvider;

  /**
   * This creates an adapter for a {@link org.sireum.aadl.gumbo.gumbo.SlangType}.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Adapter createSlangTypeAdapter()
  {
    if (slangTypeItemProvider == null)
    {
      slangTypeItemProvider = new SlangTypeItemProvider(this);
    }

    return slangTypeItemProvider;
  }

  /**
   * This keeps track of the one adapter used for all {@link org.sireum.aadl.gumbo.gumbo.SlangTypeArgs} instances.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected SlangTypeArgsItemProvider slangTypeArgsItemProvider;

  /**
   * This creates an adapter for a {@link org.sireum.aadl.gumbo.gumbo.SlangTypeArgs}.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Adapter createSlangTypeArgsAdapter()
  {
    if (slangTypeArgsItemProvider == null)
    {
      slangTypeArgsItemProvider = new SlangTypeArgsItemProvider(this);
    }

    return slangTypeArgsItemProvider;
  }

  /**
   * This keeps track of the one adapter used for all {@link org.sireum.aadl.gumbo.gumbo.SlangLit} instances.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected SlangLitItemProvider slangLitItemProvider;

  /**
   * This creates an adapter for a {@link org.sireum.aadl.gumbo.gumbo.SlangLit}.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Adapter createSlangLitAdapter()
  {
    if (slangLitItemProvider == null)
    {
      slangLitItemProvider = new SlangLitItemProvider(this);
    }

    return slangLitItemProvider;
  }

  /**
   * This keeps track of the one adapter used for all {@link org.sireum.aadl.gumbo.gumbo.SlangInterp} instances.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected SlangInterpItemProvider slangInterpItemProvider;

  /**
   * This creates an adapter for a {@link org.sireum.aadl.gumbo.gumbo.SlangInterp}.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Adapter createSlangInterpAdapter()
  {
    if (slangInterpItemProvider == null)
    {
      slangInterpItemProvider = new SlangInterpItemProvider(this);
    }

    return slangInterpItemProvider;
  }

  /**
   * This keeps track of the one adapter used for all {@link org.sireum.aadl.gumbo.gumbo.SlangMInterp} instances.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected SlangMInterpItemProvider slangMInterpItemProvider;

  /**
   * This creates an adapter for a {@link org.sireum.aadl.gumbo.gumbo.SlangMInterp}.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Adapter createSlangMInterpAdapter()
  {
    if (slangMInterpItemProvider == null)
    {
      slangMInterpItemProvider = new SlangMInterpItemProvider(this);
    }

    return slangMInterpItemProvider;
  }

  /**
   * This keeps track of the one adapter used for all {@link org.sireum.aadl.gumbo.gumbo.SlangIfStmt} instances.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected SlangIfStmtItemProvider slangIfStmtItemProvider;

  /**
   * This creates an adapter for a {@link org.sireum.aadl.gumbo.gumbo.SlangIfStmt}.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Adapter createSlangIfStmtAdapter()
  {
    if (slangIfStmtItemProvider == null)
    {
      slangIfStmtItemProvider = new SlangIfStmtItemProvider(this);
    }

    return slangIfStmtItemProvider;
  }

  /**
   * This keeps track of the one adapter used for all {@link org.sireum.aadl.gumbo.gumbo.SlangWhileStmt} instances.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected SlangWhileStmtItemProvider slangWhileStmtItemProvider;

  /**
   * This creates an adapter for a {@link org.sireum.aadl.gumbo.gumbo.SlangWhileStmt}.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Adapter createSlangWhileStmtAdapter()
  {
    if (slangWhileStmtItemProvider == null)
    {
      slangWhileStmtItemProvider = new SlangWhileStmtItemProvider(this);
    }

    return slangWhileStmtItemProvider;
  }

  /**
   * This keeps track of the one adapter used for all {@link org.sireum.aadl.gumbo.gumbo.SlangMatchStmt} instances.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected SlangMatchStmtItemProvider slangMatchStmtItemProvider;

  /**
   * This creates an adapter for a {@link org.sireum.aadl.gumbo.gumbo.SlangMatchStmt}.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Adapter createSlangMatchStmtAdapter()
  {
    if (slangMatchStmtItemProvider == null)
    {
      slangMatchStmtItemProvider = new SlangMatchStmtItemProvider(this);
    }

    return slangMatchStmtItemProvider;
  }

  /**
   * This keeps track of the one adapter used for all {@link org.sireum.aadl.gumbo.gumbo.SlangSpecStmt} instances.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected SlangSpecStmtItemProvider slangSpecStmtItemProvider;

  /**
   * This creates an adapter for a {@link org.sireum.aadl.gumbo.gumbo.SlangSpecStmt}.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Adapter createSlangSpecStmtAdapter()
  {
    if (slangSpecStmtItemProvider == null)
    {
      slangSpecStmtItemProvider = new SlangSpecStmtItemProvider(this);
    }

    return slangSpecStmtItemProvider;
  }

  /**
   * This keeps track of the one adapter used for all {@link org.sireum.aadl.gumbo.gumbo.SlangAssumeStmt} instances.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected SlangAssumeStmtItemProvider slangAssumeStmtItemProvider;

  /**
   * This creates an adapter for a {@link org.sireum.aadl.gumbo.gumbo.SlangAssumeStmt}.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Adapter createSlangAssumeStmtAdapter()
  {
    if (slangAssumeStmtItemProvider == null)
    {
      slangAssumeStmtItemProvider = new SlangAssumeStmtItemProvider(this);
    }

    return slangAssumeStmtItemProvider;
  }

  /**
   * This keeps track of the one adapter used for all {@link org.sireum.aadl.gumbo.gumbo.SlangAssertStmt} instances.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected SlangAssertStmtItemProvider slangAssertStmtItemProvider;

  /**
   * This creates an adapter for a {@link org.sireum.aadl.gumbo.gumbo.SlangAssertStmt}.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Adapter createSlangAssertStmtAdapter()
  {
    if (slangAssertStmtItemProvider == null)
    {
      slangAssertStmtItemProvider = new SlangAssertStmtItemProvider(this);
    }

    return slangAssertStmtItemProvider;
  }

  /**
   * This keeps track of the one adapter used for all {@link org.sireum.aadl.gumbo.gumbo.SlangHaltStmt} instances.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected SlangHaltStmtItemProvider slangHaltStmtItemProvider;

  /**
   * This creates an adapter for a {@link org.sireum.aadl.gumbo.gumbo.SlangHaltStmt}.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Adapter createSlangHaltStmtAdapter()
  {
    if (slangHaltStmtItemProvider == null)
    {
      slangHaltStmtItemProvider = new SlangHaltStmtItemProvider(this);
    }

    return slangHaltStmtItemProvider;
  }

  /**
   * This keeps track of the one adapter used for all {@link org.sireum.aadl.gumbo.gumbo.SlangDoStmt} instances.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected SlangDoStmtItemProvider slangDoStmtItemProvider;

  /**
   * This creates an adapter for a {@link org.sireum.aadl.gumbo.gumbo.SlangDoStmt}.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Adapter createSlangDoStmtAdapter()
  {
    if (slangDoStmtItemProvider == null)
    {
      slangDoStmtItemProvider = new SlangDoStmtItemProvider(this);
    }

    return slangDoStmtItemProvider;
  }

  /**
   * This keeps track of the one adapter used for all {@link org.sireum.aadl.gumbo.gumbo.SlangIdStmt} instances.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected SlangIdStmtItemProvider slangIdStmtItemProvider;

  /**
   * This creates an adapter for a {@link org.sireum.aadl.gumbo.gumbo.SlangIdStmt}.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Adapter createSlangIdStmtAdapter()
  {
    if (slangIdStmtItemProvider == null)
    {
      slangIdStmtItemProvider = new SlangIdStmtItemProvider(this);
    }

    return slangIdStmtItemProvider;
  }

  /**
   * This keeps track of the one adapter used for all {@link org.sireum.aadl.gumbo.gumbo.SlangFieldLookup} instances.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected SlangFieldLookupItemProvider slangFieldLookupItemProvider;

  /**
   * This creates an adapter for a {@link org.sireum.aadl.gumbo.gumbo.SlangFieldLookup}.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Adapter createSlangFieldLookupAdapter()
  {
    if (slangFieldLookupItemProvider == null)
    {
      slangFieldLookupItemProvider = new SlangFieldLookupItemProvider(this);
    }

    return slangFieldLookupItemProvider;
  }

  /**
   * This keeps track of the one adapter used for all {@link org.sireum.aadl.gumbo.gumbo.SlangMethodCall} instances.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected SlangMethodCallItemProvider slangMethodCallItemProvider;

  /**
   * This creates an adapter for a {@link org.sireum.aadl.gumbo.gumbo.SlangMethodCall}.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Adapter createSlangMethodCallAdapter()
  {
    if (slangMethodCallItemProvider == null)
    {
      slangMethodCallItemProvider = new SlangMethodCallItemProvider(this);
    }

    return slangMethodCallItemProvider;
  }

  /**
   * This keeps track of the one adapter used for all {@link org.sireum.aadl.gumbo.gumbo.BasicExp} instances.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected BasicExpItemProvider basicExpItemProvider;

  /**
   * This creates an adapter for a {@link org.sireum.aadl.gumbo.gumbo.BasicExp}.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Adapter createBasicExpAdapter()
  {
    if (basicExpItemProvider == null)
    {
      basicExpItemProvider = new BasicExpItemProvider(this);
    }

    return basicExpItemProvider;
  }

  /**
   * This keeps track of the one adapter used for all {@link org.sireum.aadl.gumbo.gumbo.IfElseExp} instances.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected IfElseExpItemProvider ifElseExpItemProvider;

  /**
   * This creates an adapter for a {@link org.sireum.aadl.gumbo.gumbo.IfElseExp}.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Adapter createIfElseExpAdapter()
  {
    if (ifElseExpItemProvider == null)
    {
      ifElseExpItemProvider = new IfElseExpItemProvider(this);
    }

    return ifElseExpItemProvider;
  }

  /**
   * This keeps track of the one adapter used for all {@link org.sireum.aadl.gumbo.gumbo.QuantifiedExp} instances.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected QuantifiedExpItemProvider quantifiedExpItemProvider;

  /**
   * This creates an adapter for a {@link org.sireum.aadl.gumbo.gumbo.QuantifiedExp}.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Adapter createQuantifiedExpAdapter()
  {
    if (quantifiedExpItemProvider == null)
    {
      quantifiedExpItemProvider = new QuantifiedExpItemProvider(this);
    }

    return quantifiedExpItemProvider;
  }

  /**
   * This keeps track of the one adapter used for all {@link org.sireum.aadl.gumbo.gumbo.UnaryExp} instances.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected UnaryExpItemProvider unaryExpItemProvider;

  /**
   * This creates an adapter for a {@link org.sireum.aadl.gumbo.gumbo.UnaryExp}.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Adapter createUnaryExpAdapter()
  {
    if (unaryExpItemProvider == null)
    {
      unaryExpItemProvider = new UnaryExpItemProvider(this);
    }

    return unaryExpItemProvider;
  }

  /**
   * This keeps track of the one adapter used for all {@link org.sireum.aadl.gumbo.gumbo.SlangAccess} instances.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected SlangAccessItemProvider slangAccessItemProvider;

  /**
   * This creates an adapter for a {@link org.sireum.aadl.gumbo.gumbo.SlangAccess}.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Adapter createSlangAccessAdapter()
  {
    if (slangAccessItemProvider == null)
    {
      slangAccessItemProvider = new SlangAccessItemProvider(this);
    }

    return slangAccessItemProvider;
  }

  /**
   * This keeps track of the one adapter used for all {@link org.sireum.aadl.gumbo.gumbo.SlangLitTerm} instances.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected SlangLitTermItemProvider slangLitTermItemProvider;

  /**
   * This creates an adapter for a {@link org.sireum.aadl.gumbo.gumbo.SlangLitTerm}.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Adapter createSlangLitTermAdapter()
  {
    if (slangLitTermItemProvider == null)
    {
      slangLitTermItemProvider = new SlangLitTermItemProvider(this);
    }

    return slangLitTermItemProvider;
  }

  /**
   * This keeps track of the one adapter used for all {@link org.sireum.aadl.gumbo.gumbo.SlangInterpTerm} instances.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected SlangInterpTermItemProvider slangInterpTermItemProvider;

  /**
   * This creates an adapter for a {@link org.sireum.aadl.gumbo.gumbo.SlangInterpTerm}.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Adapter createSlangInterpTermAdapter()
  {
    if (slangInterpTermItemProvider == null)
    {
      slangInterpTermItemProvider = new SlangInterpTermItemProvider(this);
    }

    return slangInterpTermItemProvider;
  }

  /**
   * This keeps track of the one adapter used for all {@link org.sireum.aadl.gumbo.gumbo.InStateExpr} instances.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected InStateExprItemProvider inStateExprItemProvider;

  /**
   * This creates an adapter for a {@link org.sireum.aadl.gumbo.gumbo.InStateExpr}.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Adapter createInStateExprAdapter()
  {
    if (inStateExprItemProvider == null)
    {
      inStateExprItemProvider = new InStateExprItemProvider(this);
    }

    return inStateExprItemProvider;
  }

  /**
   * This keeps track of the one adapter used for all {@link org.sireum.aadl.gumbo.gumbo.MaySendExpr} instances.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected MaySendExprItemProvider maySendExprItemProvider;

  /**
   * This creates an adapter for a {@link org.sireum.aadl.gumbo.gumbo.MaySendExpr}.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Adapter createMaySendExprAdapter()
  {
    if (maySendExprItemProvider == null)
    {
      maySendExprItemProvider = new MaySendExprItemProvider(this);
    }

    return maySendExprItemProvider;
  }

  /**
   * This keeps track of the one adapter used for all {@link org.sireum.aadl.gumbo.gumbo.MustSendExpr} instances.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected MustSendExprItemProvider mustSendExprItemProvider;

  /**
   * This creates an adapter for a {@link org.sireum.aadl.gumbo.gumbo.MustSendExpr}.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Adapter createMustSendExprAdapter()
  {
    if (mustSendExprItemProvider == null)
    {
      mustSendExprItemProvider = new MustSendExprItemProvider(this);
    }

    return mustSendExprItemProvider;
  }

  /**
   * This keeps track of the one adapter used for all {@link org.sireum.aadl.gumbo.gumbo.NoSendExpr} instances.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected NoSendExprItemProvider noSendExprItemProvider;

  /**
   * This creates an adapter for a {@link org.sireum.aadl.gumbo.gumbo.NoSendExpr}.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Adapter createNoSendExprAdapter()
  {
    if (noSendExprItemProvider == null)
    {
      noSendExprItemProvider = new NoSendExprItemProvider(this);
    }

    return noSendExprItemProvider;
  }

  /**
   * This keeps track of the one adapter used for all {@link org.sireum.aadl.gumbo.gumbo.CallExpr} instances.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected CallExprItemProvider callExprItemProvider;

  /**
   * This creates an adapter for a {@link org.sireum.aadl.gumbo.gumbo.CallExpr}.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Adapter createCallExprAdapter()
  {
    if (callExprItemProvider == null)
    {
      callExprItemProvider = new CallExprItemProvider(this);
    }

    return callExprItemProvider;
  }

  /**
   * This keeps track of the one adapter used for all {@link org.sireum.aadl.gumbo.gumbo.EnumLitExpr} instances.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected EnumLitExprItemProvider enumLitExprItemProvider;

  /**
   * This creates an adapter for a {@link org.sireum.aadl.gumbo.gumbo.EnumLitExpr}.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Adapter createEnumLitExprAdapter()
  {
    if (enumLitExprItemProvider == null)
    {
      enumLitExprItemProvider = new EnumLitExprItemProvider(this);
    }

    return enumLitExprItemProvider;
  }

  /**
   * This keeps track of the one adapter used for all {@link org.sireum.aadl.gumbo.gumbo.RecordLitExpr} instances.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected RecordLitExprItemProvider recordLitExprItemProvider;

  /**
   * This creates an adapter for a {@link org.sireum.aadl.gumbo.gumbo.RecordLitExpr}.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Adapter createRecordLitExprAdapter()
  {
    if (recordLitExprItemProvider == null)
    {
      recordLitExprItemProvider = new RecordLitExprItemProvider(this);
    }

    return recordLitExprItemProvider;
  }

  /**
   * This keeps track of the one adapter used for all {@link org.sireum.aadl.gumbo.gumbo.DataRefExpr} instances.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected DataRefExprItemProvider dataRefExprItemProvider;

  /**
   * This creates an adapter for a {@link org.sireum.aadl.gumbo.gumbo.DataRefExpr}.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Adapter createDataRefExprAdapter()
  {
    if (dataRefExprItemProvider == null)
    {
      dataRefExprItemProvider = new DataRefExprItemProvider(this);
    }

    return dataRefExprItemProvider;
  }

  /**
   * This keeps track of the one adapter used for all {@link org.sireum.aadl.gumbo.gumbo.ParenExpr} instances.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected ParenExprItemProvider parenExprItemProvider;

  /**
   * This creates an adapter for a {@link org.sireum.aadl.gumbo.gumbo.ParenExpr}.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Adapter createParenExprAdapter()
  {
    if (parenExprItemProvider == null)
    {
      parenExprItemProvider = new ParenExprItemProvider(this);
    }

    return parenExprItemProvider;
  }

  /**
   * This keeps track of the one adapter used for all {@link org.sireum.aadl.gumbo.gumbo.SlangForTerm} instances.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected SlangForTermItemProvider slangForTermItemProvider;

  /**
   * This creates an adapter for a {@link org.sireum.aadl.gumbo.gumbo.SlangForTerm}.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Adapter createSlangForTermAdapter()
  {
    if (slangForTermItemProvider == null)
    {
      slangForTermItemProvider = new SlangForTermItemProvider(this);
    }

    return slangForTermItemProvider;
  }

  /**
   * This keeps track of the one adapter used for all {@link org.sireum.aadl.gumbo.gumbo.SlangBlockTerm} instances.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected SlangBlockTermItemProvider slangBlockTermItemProvider;

  /**
   * This creates an adapter for a {@link org.sireum.aadl.gumbo.gumbo.SlangBlockTerm}.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Adapter createSlangBlockTermAdapter()
  {
    if (slangBlockTermItemProvider == null)
    {
      slangBlockTermItemProvider = new SlangBlockTermItemProvider(this);
    }

    return slangBlockTermItemProvider;
  }

  /**
   * This keeps track of the one adapter used for all {@link org.sireum.aadl.gumbo.gumbo.BooleanLit} instances.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected BooleanLitItemProvider booleanLitItemProvider;

  /**
   * This creates an adapter for a {@link org.sireum.aadl.gumbo.gumbo.BooleanLit}.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Adapter createBooleanLitAdapter()
  {
    if (booleanLitItemProvider == null)
    {
      booleanLitItemProvider = new BooleanLitItemProvider(this);
    }

    return booleanLitItemProvider;
  }

  /**
   * This keeps track of the one adapter used for all {@link org.sireum.aadl.gumbo.gumbo.ResultLit} instances.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected ResultLitItemProvider resultLitItemProvider;

  /**
   * This creates an adapter for a {@link org.sireum.aadl.gumbo.gumbo.ResultLit}.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Adapter createResultLitAdapter()
  {
    if (resultLitItemProvider == null)
    {
      resultLitItemProvider = new ResultLitItemProvider(this);
    }

    return resultLitItemProvider;
  }

  /**
   * This keeps track of the one adapter used for all {@link org.sireum.aadl.gumbo.gumbo.IntegerLit} instances.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected IntegerLitItemProvider integerLitItemProvider;

  /**
   * This creates an adapter for a {@link org.sireum.aadl.gumbo.gumbo.IntegerLit}.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Adapter createIntegerLitAdapter()
  {
    if (integerLitItemProvider == null)
    {
      integerLitItemProvider = new IntegerLitItemProvider(this);
    }

    return integerLitItemProvider;
  }

  /**
   * This keeps track of the one adapter used for all {@link org.sireum.aadl.gumbo.gumbo.HexLit} instances.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected HexLitItemProvider hexLitItemProvider;

  /**
   * This creates an adapter for a {@link org.sireum.aadl.gumbo.gumbo.HexLit}.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Adapter createHexLitAdapter()
  {
    if (hexLitItemProvider == null)
    {
      hexLitItemProvider = new HexLitItemProvider(this);
    }

    return hexLitItemProvider;
  }

  /**
   * This keeps track of the one adapter used for all {@link org.sireum.aadl.gumbo.gumbo.BinLit} instances.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected BinLitItemProvider binLitItemProvider;

  /**
   * This creates an adapter for a {@link org.sireum.aadl.gumbo.gumbo.BinLit}.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Adapter createBinLitAdapter()
  {
    if (binLitItemProvider == null)
    {
      binLitItemProvider = new BinLitItemProvider(this);
    }

    return binLitItemProvider;
  }

  /**
   * This keeps track of the one adapter used for all {@link org.sireum.aadl.gumbo.gumbo.F32Lit} instances.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected F32LitItemProvider f32LitItemProvider;

  /**
   * This creates an adapter for a {@link org.sireum.aadl.gumbo.gumbo.F32Lit}.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Adapter createF32LitAdapter()
  {
    if (f32LitItemProvider == null)
    {
      f32LitItemProvider = new F32LitItemProvider(this);
    }

    return f32LitItemProvider;
  }

  /**
   * This keeps track of the one adapter used for all {@link org.sireum.aadl.gumbo.gumbo.F64Lit} instances.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected F64LitItemProvider f64LitItemProvider;

  /**
   * This creates an adapter for a {@link org.sireum.aadl.gumbo.gumbo.F64Lit}.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Adapter createF64LitAdapter()
  {
    if (f64LitItemProvider == null)
    {
      f64LitItemProvider = new F64LitItemProvider(this);
    }

    return f64LitItemProvider;
  }

  /**
   * This keeps track of the one adapter used for all {@link org.sireum.aadl.gumbo.gumbo.SlangStringLit} instances.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected SlangStringLitItemProvider slangStringLitItemProvider;

  /**
   * This creates an adapter for a {@link org.sireum.aadl.gumbo.gumbo.SlangStringLit}.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Adapter createSlangStringLitAdapter()
  {
    if (slangStringLitItemProvider == null)
    {
      slangStringLitItemProvider = new SlangStringLitItemProvider(this);
    }

    return slangStringLitItemProvider;
  }

  /**
   * This keeps track of the one adapter used for all {@link org.sireum.aadl.gumbo.gumbo.MStringLit} instances.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected MStringLitItemProvider mStringLitItemProvider;

  /**
   * This creates an adapter for a {@link org.sireum.aadl.gumbo.gumbo.MStringLit}.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Adapter createMStringLitAdapter()
  {
    if (mStringLitItemProvider == null)
    {
      mStringLitItemProvider = new MStringLitItemProvider(this);
    }

    return mStringLitItemProvider;
  }

  /**
   * This keeps track of the one adapter used for all {@link org.sireum.aadl.gumbo.gumbo.SlangMspInterp} instances.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected SlangMspInterpItemProvider slangMspInterpItemProvider;

  /**
   * This creates an adapter for a {@link org.sireum.aadl.gumbo.gumbo.SlangMspInterp}.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Adapter createSlangMspInterpAdapter()
  {
    if (slangMspInterpItemProvider == null)
    {
      slangMspInterpItemProvider = new SlangMspInterpItemProvider(this);
    }

    return slangMspInterpItemProvider;
  }

  /**
   * This keeps track of the one adapter used for all {@link org.sireum.aadl.gumbo.gumbo.SlangLiteralInterp} instances.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected SlangLiteralInterpItemProvider slangLiteralInterpItemProvider;

  /**
   * This creates an adapter for a {@link org.sireum.aadl.gumbo.gumbo.SlangLiteralInterp}.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Adapter createSlangLiteralInterpAdapter()
  {
    if (slangLiteralInterpItemProvider == null)
    {
      slangLiteralInterpItemProvider = new SlangLiteralInterpItemProvider(this);
    }

    return slangLiteralInterpItemProvider;
  }

  /**
   * This keeps track of the one adapter used for all {@link org.sireum.aadl.gumbo.gumbo.SlangMspbInterp} instances.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected SlangMspbInterpItemProvider slangMspbInterpItemProvider;

  /**
   * This creates an adapter for a {@link org.sireum.aadl.gumbo.gumbo.SlangMspbInterp}.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Adapter createSlangMspbInterpAdapter()
  {
    if (slangMspbInterpItemProvider == null)
    {
      slangMspbInterpItemProvider = new SlangMspbInterpItemProvider(this);
    }

    return slangMspbInterpItemProvider;
  }

  /**
   * This returns the root adapter factory that contains this factory.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public ComposeableAdapterFactory getRootAdapterFactory()
  {
    return parentAdapterFactory == null ? this : parentAdapterFactory.getRootAdapterFactory();
  }

  /**
   * This sets the composed adapter factory that contains this factory.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setParentAdapterFactory(ComposedAdapterFactory parentAdapterFactory)
  {
    this.parentAdapterFactory = parentAdapterFactory;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean isFactoryForType(Object type)
  {
    return supportedTypes.contains(type) || super.isFactoryForType(type);
  }

  /**
   * This implementation substitutes the factory itself as the key for the adapter.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Adapter adapt(Notifier notifier, Object type)
  {
    return super.adapt(notifier, this);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object adapt(Object object, Object type)
  {
    if (isFactoryForType(type))
    {
      Object adapter = super.adapt(object, type);
      if (!(type instanceof Class<?>) || (((Class<?>)type).isInstance(adapter)))
      {
        return adapter;
      }
    }

    return null;
  }

  /**
   * This adds a listener.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void addListener(INotifyChangedListener notifyChangedListener)
  {
    changeNotifier.addListener(notifyChangedListener);
  }

  /**
   * This removes a listener.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void removeListener(INotifyChangedListener notifyChangedListener)
  {
    changeNotifier.removeListener(notifyChangedListener);
  }

  /**
   * This delegates to {@link #changeNotifier} and to {@link #parentAdapterFactory}.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void fireNotifyChanged(Notification notification)
  {
    changeNotifier.fireNotifyChanged(notification);

    if (parentAdapterFactory != null)
    {
      parentAdapterFactory.fireNotifyChanged(notification);
    }
  }

  /**
   * This disposes all of the item providers created by this factory. 
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void dispose()
  {
    if (gumboLibraryItemProvider != null) gumboLibraryItemProvider.dispose();
    if (gumboSubclauseItemProvider != null) gumboSubclauseItemProvider.dispose();
    if (specSectionItemProvider != null) specSectionItemProvider.dispose();
    if (stateItemProvider != null) stateItemProvider.dispose();
    if (stateVarDeclItemProvider != null) stateVarDeclItemProvider.dispose();
    if (invariantsItemProvider != null) invariantsItemProvider.dispose();
    if (invSpecItemProvider != null) invSpecItemProvider.dispose();
    if (integrationItemProvider != null) integrationItemProvider.dispose();
    if (initializeItemProvider != null) initializeItemProvider.dispose();
    if (initializeSpecStatementItemProvider != null) initializeSpecStatementItemProvider.dispose();
    if (computeItemProvider != null) computeItemProvider.dispose();
    if (handlerClauseItemProvider != null) handlerClauseItemProvider.dispose();
    if (caseStatementClauseItemProvider != null) caseStatementClauseItemProvider.dispose();
    if (specStatementItemProvider != null) specStatementItemProvider.dispose();
    if (assumeStatementItemProvider != null) assumeStatementItemProvider.dispose();
    if (anonAssumeStatementItemProvider != null) anonAssumeStatementItemProvider.dispose();
    if (guaranteeStatementItemProvider != null) guaranteeStatementItemProvider.dispose();
    if (anonGuaranteeStatementItemProvider != null) anonGuaranteeStatementItemProvider.dispose();
    if (otherDataRefItemProvider != null) otherDataRefItemProvider.dispose();
    if (doubleDotRefItemProvider != null) doubleDotRefItemProvider.dispose();
    if (dataElementItemProvider != null) dataElementItemProvider.dispose();
    if (subcomponentElementItemProvider != null) subcomponentElementItemProvider.dispose();
    if (functionsItemProvider != null) functionsItemProvider.dispose();
    if (funcSpecItemProvider != null) funcSpecItemProvider.dispose();
    if (slangDefDeclDefItemProvider != null) slangDefDeclDefItemProvider.dispose();
    if (slangDefDeclItemProvider != null) slangDefDeclItemProvider.dispose();
    if (slangDefDefItemProvider != null) slangDefDefItemProvider.dispose();
    if (slangDefExtItemProvider != null) slangDefExtItemProvider.dispose();
    if (slangDefParamsItemProvider != null) slangDefParamsItemProvider.dispose();
    if (slangDefParamItemProvider != null) slangDefParamItemProvider.dispose();
    if (slangTypeParamsItemProvider != null) slangTypeParamsItemProvider.dispose();
    if (slangTypeParamItemProvider != null) slangTypeParamItemProvider.dispose();
    if (slangDefContractItemProvider != null) slangDefContractItemProvider.dispose();
    if (slangDefContractCaseItemProvider != null) slangDefContractCaseItemProvider.dispose();
    if (slangSuprsItemProvider != null) slangSuprsItemProvider.dispose();
    if (slangSuprItemProvider != null) slangSuprItemProvider.dispose();
    if (slangExtItemProvider != null) slangExtItemProvider.dispose();
    if (slangInvariantItemProvider != null) slangInvariantItemProvider.dispose();
    if (slangRequiresItemProvider != null) slangRequiresItemProvider.dispose();
    if (slangReadsItemProvider != null) slangReadsItemProvider.dispose();
    if (slangModifiesItemProvider != null) slangModifiesItemProvider.dispose();
    if (slangEnsuresItemProvider != null) slangEnsuresItemProvider.dispose();
    if (slangStmtItemProvider != null) slangStmtItemProvider.dispose();
    if (slangElseItemProvider != null) slangElseItemProvider.dispose();
    if (slangLoopContractItemProvider != null) slangLoopContractItemProvider.dispose();
    if (slangLHSSuffixItemProvider != null) slangLHSSuffixItemProvider.dispose();
    if (slangCaseItemProvider != null) slangCaseItemProvider.dispose();
    if (slangPatternItemProvider != null) slangPatternItemProvider.dispose();
    if (slangTPatternItemProvider != null) slangTPatternItemProvider.dispose();
    if (slangVarDefItemProvider != null) slangVarDefItemProvider.dispose();
    if (exprItemProvider != null) exprItemProvider.dispose();
    if (slangQuantVarItemProvider != null) slangQuantVarItemProvider.dispose();
    if (slangBlockItemProvider != null) slangBlockItemProvider.dispose();
    if (slangAccessSuffixItemProvider != null) slangAccessSuffixItemProvider.dispose();
    if (slangParamsItemProvider != null) slangParamsItemProvider.dispose();
    if (slangParamItemProvider != null) slangParamItemProvider.dispose();
    if (slangForRangeItemProvider != null) slangForRangeItemProvider.dispose();
    if (slangRetItemProvider != null) slangRetItemProvider.dispose();
    if (slangCallSuffixItemProvider != null) slangCallSuffixItemProvider.dispose();
    if (slangCallArgsItemProvider != null) slangCallArgsItemProvider.dispose();
    if (slangTypeItemProvider != null) slangTypeItemProvider.dispose();
    if (slangTypeArgsItemProvider != null) slangTypeArgsItemProvider.dispose();
    if (slangLitItemProvider != null) slangLitItemProvider.dispose();
    if (slangInterpItemProvider != null) slangInterpItemProvider.dispose();
    if (slangMInterpItemProvider != null) slangMInterpItemProvider.dispose();
    if (slangIfStmtItemProvider != null) slangIfStmtItemProvider.dispose();
    if (slangWhileStmtItemProvider != null) slangWhileStmtItemProvider.dispose();
    if (slangMatchStmtItemProvider != null) slangMatchStmtItemProvider.dispose();
    if (slangSpecStmtItemProvider != null) slangSpecStmtItemProvider.dispose();
    if (slangAssumeStmtItemProvider != null) slangAssumeStmtItemProvider.dispose();
    if (slangAssertStmtItemProvider != null) slangAssertStmtItemProvider.dispose();
    if (slangHaltStmtItemProvider != null) slangHaltStmtItemProvider.dispose();
    if (slangDoStmtItemProvider != null) slangDoStmtItemProvider.dispose();
    if (slangIdStmtItemProvider != null) slangIdStmtItemProvider.dispose();
    if (slangFieldLookupItemProvider != null) slangFieldLookupItemProvider.dispose();
    if (slangMethodCallItemProvider != null) slangMethodCallItemProvider.dispose();
    if (basicExpItemProvider != null) basicExpItemProvider.dispose();
    if (ifElseExpItemProvider != null) ifElseExpItemProvider.dispose();
    if (quantifiedExpItemProvider != null) quantifiedExpItemProvider.dispose();
    if (unaryExpItemProvider != null) unaryExpItemProvider.dispose();
    if (slangAccessItemProvider != null) slangAccessItemProvider.dispose();
    if (slangLitTermItemProvider != null) slangLitTermItemProvider.dispose();
    if (slangInterpTermItemProvider != null) slangInterpTermItemProvider.dispose();
    if (inStateExprItemProvider != null) inStateExprItemProvider.dispose();
    if (maySendExprItemProvider != null) maySendExprItemProvider.dispose();
    if (mustSendExprItemProvider != null) mustSendExprItemProvider.dispose();
    if (noSendExprItemProvider != null) noSendExprItemProvider.dispose();
    if (callExprItemProvider != null) callExprItemProvider.dispose();
    if (enumLitExprItemProvider != null) enumLitExprItemProvider.dispose();
    if (recordLitExprItemProvider != null) recordLitExprItemProvider.dispose();
    if (dataRefExprItemProvider != null) dataRefExprItemProvider.dispose();
    if (parenExprItemProvider != null) parenExprItemProvider.dispose();
    if (slangForTermItemProvider != null) slangForTermItemProvider.dispose();
    if (slangBlockTermItemProvider != null) slangBlockTermItemProvider.dispose();
    if (booleanLitItemProvider != null) booleanLitItemProvider.dispose();
    if (resultLitItemProvider != null) resultLitItemProvider.dispose();
    if (integerLitItemProvider != null) integerLitItemProvider.dispose();
    if (hexLitItemProvider != null) hexLitItemProvider.dispose();
    if (binLitItemProvider != null) binLitItemProvider.dispose();
    if (f32LitItemProvider != null) f32LitItemProvider.dispose();
    if (f64LitItemProvider != null) f64LitItemProvider.dispose();
    if (slangStringLitItemProvider != null) slangStringLitItemProvider.dispose();
    if (mStringLitItemProvider != null) mStringLitItemProvider.dispose();
    if (slangMspInterpItemProvider != null) slangMspInterpItemProvider.dispose();
    if (slangLiteralInterpItemProvider != null) slangLiteralInterpItemProvider.dispose();
    if (slangMspbInterpItemProvider != null) slangMspbInterpItemProvider.dispose();
  }

}
